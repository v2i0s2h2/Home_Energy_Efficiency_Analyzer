type EnergyAssessment = record {
  id : text;
  recommendations : text;
  createdAt : nat64;
  assessmentDate : nat64;
  costSavings : float64;
  homeOwner : principal;
  updatedAt : opt nat64;
  address : text;
  efficiencyRating : float64;
  energyUsageHistory : vec EnergyUsageData;
};
type EnergyAssessmentPayload = record {
  recommendations : text;
  costSavings : float64;
  address : text;
  efficiencyRating : float64;
};
type EnergyUsageData = record { date : nat64; consumption : float64 };
type _AzleResult = variant { Ok : EnergyAssessment; Err : text };
type _AzleResult_1 = variant { Ok : vec EnergyAssessment; Err : text };
type _AzleResult_2 = variant { Ok : vec EnergyUsageData; Err : text };
service : () -> {
  addEnergyUsage : (text, nat64, float64) -> (_AzleResult);
  createEnergyAssessment : (EnergyAssessmentPayload) -> (_AzleResult);
  deleteEnergyAssessment : (text) -> (_AzleResult);
  getAllEnergyAssessments : () -> (_AzleResult_1) query;
  getEnergyAssessment : (text) -> (_AzleResult) query;
  getEnergyUsageHistory : (text) -> (_AzleResult_2) query;
  updateEnergyAssessment : (text, EnergyAssessmentPayload) -> (_AzleResult);
}
